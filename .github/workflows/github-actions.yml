name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build_test:
    environment:
      name: test
    env:
      fastapi_db_url: ${{ secrets.FASTAPI_DB_URL }}
      fastapi_db_port: ${{ secrets.FASTAPI_DB_PORT }}
      fastapi_db_user: ${{ secrets.FASTAPI_DB_USER }}
      fastapi_db_password: ${{ secrets.FASTAPI_DB_PASSWORD }}
      fastapi_db_name: ${{ secrets.FASTAPI_DB_NAME }}
      fastapi_SECRET_KEY: ${{ secrets.FASTAPI_SECRET_KEY }}
      fastapi_ACCESS_TOKEN_ALGORITHM: ${{ secrets.FASTAPI_ACCESS_TOKEN_ALGORITHM }}
      fastapi_ACCESS_TOKEN_TTL: ${{ secrets.FASTAPI_ACCESS_TOKEN_TTL }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.FASTAPI_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.FASTAPI_DB_NAME }}_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      #  - name: setup postgres
      #    uses: harmon758/postgresql-action@v1
      #    with:
      #      postgresql version: "11" # See https://hub.docker.com/_/postgres for available versions
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Install Python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - run: echo "üçè This job's status is ${{ job.status }}."
      #- name: Login to Docker Hub
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #    password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
      #- name: Build and push
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    file: ./Dockerfile
      #    push: true
      #    tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-tut:latest
      #    cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-tut:buildcache
      #    cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-tut:buildcache,mode=max
  deploy:
    needs:
      - build_test
    environment:
      name: prod
    runs-on: ubuntu-latest
    steps:
      - name: deploying stuff
        run: echo "going to deploy now"
      - uses: actions/checkout@v2
      - uses: CDNievas/heroku-action@v1.0 # This is the action
        with:
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "fastapi-tutorial-les"
